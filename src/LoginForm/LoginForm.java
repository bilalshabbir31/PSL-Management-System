/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LoginForm;

import Admin.Admin_Menu;
import DAL.DesignationDal;
import DatabaseConnectivity.DatabaseConnectivity;
import Manager.ManagerMenu;
import ScoreCard.ScoreCard_Menu;
import Sheduler_Screens.Sheduler_Menu;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author MUHAMMED BILAL
 */
public class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    Connection connection;
    DatabaseConnectivity objConnectivity;
    int Des=0;
    public LoginForm() {
        initComponents();
        objConnectivity=new DatabaseConnectivity();
        comboxDesignation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        option = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Username");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 200, 130, 50);

        username.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        username.setToolTipText("");
        jPanel2.add(username);
        username.setBounds(150, 200, 320, 50);

        password.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel2.add(password);
        password.setBounds(150, 280, 320, 50);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(10, 290, 130, 29);

        login.setBackground(new java.awt.Color(102, 204, 0));
        login.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        login.setForeground(new java.awt.Color(255, 255, 255));
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        jPanel2.add(login);
        login.setBounds(250, 380, 130, 40);

        option.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        option.setToolTipText("Option");
        option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionActionPerformed(evt);
            }
        });
        jPanel2.add(option);
        option.setBounds(150, 120, 320, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Designation");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(0, 130, 160, 29);

        jButton1.setBackground(new java.awt.Color(102, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Forgotten Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(1120, 450, 200, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Background/cover-image-13.jpg"))); // NOI18N
        jLabel2.setText("jLabel1");
        jLabel2.setToolTipText("");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 1360, 620);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1359, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionActionPerformed

    }//GEN-LAST:event_optionActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
                        
        connection=objConnectivity.getConnection();
        DesignationDal dal=new DesignationDal(connection);
        Des=dal.getIDby_DesignationName((String) option.getSelectedItem());
        if(option.getSelectedItem()=="Select"){
            if(username.getText().isEmpty()&&password.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Select Only One Menu Please Or Enter a Data!");
        }
        }else{
            if(option.getSelectedItem()=="Admin"&&username.getText().equals("admin")&&password.getText().equals("admin")){
                dispose();
                        java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Admin_Menu().setVisible(true);
                }
            });
            }
            else if(option.getSelectedItem().equals("MatchOfficial")){
                String Username=username.getText();
                String Password=password.getText();
                boolean check=getEmailandPassword(Username,Password);
                if(check==true){
                       dispose();
                       java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                        new ScoreCard_Menu().setVisible(true);
                    }
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Incorrect Password! ");
                }
            }
            else if(option.getSelectedItem().equals("Scheduler")){
                String Username=username.getText();
                String Password=password.getText();
                boolean check=getEmailandPassword(Username,Password);
                if(check==true){
                       dispose();
                       java.awt.EventQueue.invokeLater(new Runnable() {
                       public void run() {
                           new Sheduler_Menu().setVisible(true);
                       }
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Incorrect Password! ");
                }
            }
            else if(option.getSelectedItem().equals("Bid Manager")){
                String Username=username.getText();
                String Password=password.getText();
                boolean check=getEmailandPassword(Username,Password);
                if(check==true){
                       dispose();
                       java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                        new Bid_Manager_Screens.Bid_Manager_Menu().setVisible(true);
                    }
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Incorrect Password! ");
                }
            }
            else if(option.getSelectedItem().equals("Manager")){
                String Username=username.getText();
                String Password=password.getText();
                boolean check=getEmailandPassword(Username,Password);
                if(check==true){
                       dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerMenu().setVisible(true);
            }
        });
                }else{
                    JOptionPane.showMessageDialog(this, "Incorrect Password! ");
                }
            }
        }

    }//GEN-LAST:event_loginActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Forgotten_Search().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton login;
    private javax.swing.JComboBox<String> option;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

    boolean getEmailandPassword(String Username,String Password){
        boolean flag=false;
        try{
            connection=objConnectivity.getConnection();
            String Query="Select * from CreateAccount where username=? and password=? and DesignationID=?";
            PreparedStatement preparedStatement=connection.prepareStatement(Query);
            preparedStatement.setString(1,Username);
            preparedStatement.setString(2,Password);
            preparedStatement.setInt(3,Des);
            ResultSet objset=preparedStatement.executeQuery();
            if(objset!=null&&objset.next()){
                flag=true;
            }else{
                flag=false;
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return flag;
    }
    
    void comboxDesignation(){
        try{
            option.addItem("Select");
            option.addItem("Admin");
            connection=objConnectivity.getConnection();
            String Query="Select DesignationName from Designation";
            PreparedStatement preparedStatement=connection.prepareStatement(Query);
            ResultSet objResult=preparedStatement.executeQuery();
            while(objResult.next()){
                String Name=objResult.getString("DesignationName");
                option.addItem(Name);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    
    
    

}
