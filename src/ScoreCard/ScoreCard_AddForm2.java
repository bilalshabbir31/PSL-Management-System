/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ScoreCard;

import DatabaseConnectivity.DatabaseConnectivity;
import Psl_Classes.SheduleMatch;
import classes.ScoreCard;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;



/**
 *
 * @author MUHAMMED BILAL
 */
public class ScoreCard_AddForm2 extends javax.swing.JFrame {

    /**
     * Creates new form Add_Owner
     */
    DatabaseConnectivity objConnectivity;
    private Connection Connection;
    SheduleMatch s;
    String getTeamone;
    String getTeamTwo;
    String SelectTeam1;
    String SelectTeam2;
    String getIDOFTEAM;
    String getPlayer1="";
    String getPlayer2="";
    public ScoreCard_AddForm2(SheduleMatch sm) {
        initComponents();
        objConnectivity=new DatabaseConnectivity();
        Connection=objConnectivity.getConnection();
        s=sm;
        if(s!=null){
                    
            getTeamone=checkTeam(s.getTeamAId());
            getTeamTwo=checkTeam(s.getTeamBId());
            matchvs.setText(getTeamone+" VS "+getTeamTwo);
            season.setText(getSeason(s.getSeasonId()));
            matchid.setText(s.getMatchId());
            TeamCombox();
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        runscored = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        TeamCombox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        overblowed = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        runsconceed = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        nowide = new javax.swing.JTextField();
        noballs = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        outtype = new javax.swing.JTextField();
        inning = new javax.swing.JComboBox<>();
        players1 = new javax.swing.JComboBox<>();
        matchvs = new javax.swing.JLabel();
        matchid = new javax.swing.JLabel();
        season = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        players2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Player");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(160, 280, 80, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Runs Scored");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(610, 270, 100, 50);

        runscored.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(runscored);
        runscored.setBounds(750, 280, 280, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Inning");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(160, 390, 80, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Outby");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(640, 390, 60, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("OutType");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(160, 490, 110, 30);

        add.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Icon/addscorecard.png"))); // NOI18N
        add.setText("Add");
        add.setContentAreaFilled(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add);
        add.setBounds(530, 850, 220, 90);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Match ID");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(620, 170, 110, 30);

        back.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Icon/icons8-back-arrow-48.png"))); // NOI18N
        back.setText("Back");
        back.setContentAreaFilled(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back);
        back.setBounds(10, 20, 130, 57);

        TeamCombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeamComboxActionPerformed(evt);
            }
        });
        jPanel1.add(TeamCombox);
        TeamCombox.setBounds(270, 160, 260, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Team");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(150, 170, 110, 22);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Over Blowed");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(600, 490, 100, 30);
        jPanel1.add(overblowed);
        overblowed.setBounds(750, 480, 280, 40);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Runs Conceed");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(130, 600, 112, 40);
        jPanel1.add(runsconceed);
        runsconceed.setBounds(270, 600, 270, 40);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("No Wide");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(180, 710, 67, 60);
        jPanel1.add(nowide);
        nowide.setBounds(270, 720, 270, 40);

        noballs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noballsActionPerformed(evt);
            }
        });
        jPanel1.add(noballs);
        noballs.setBounds(750, 590, 280, 40);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("No Balls");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(630, 610, 64, 22);

        outtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outtypeActionPerformed(evt);
            }
        });
        jPanel1.add(outtype);
        outtype.setBounds(270, 490, 270, 40);

        inning.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First", "Second" }));
        inning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inningActionPerformed(evt);
            }
        });
        jPanel1.add(inning);
        inning.setBounds(270, 380, 270, 40);

        players1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                players1ActionPerformed(evt);
            }
        });
        jPanel1.add(players1);
        players1.setBounds(270, 270, 260, 40);

        matchvs.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        matchvs.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(matchvs);
        matchvs.setBounds(400, 50, 420, 60);

        matchid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        matchid.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(matchid);
        matchid.setBounds(740, 170, 280, 40);

        season.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        season.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(season);
        season.setBounds(1060, 70, 100, 40);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Season");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(970, 60, 70, 50);

        players2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                players2ActionPerformed(evt);
            }
        });
        jPanel1.add(players2);
        players2.setBounds(750, 390, 280, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Background/new.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(-10, 0, 1260, 1000);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1244, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScoreCard_AddForm1().setVisible(true);
            }
        });        
    }//GEN-LAST:event_backActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //getdata in local variables
        
        if(TeamCombox.getSelectedItem()=="-Select-"&&matchid.getText().isEmpty()&&runscored.getText().isEmpty()&&outtype.getText().isEmpty()&&runsconceed.getText().isEmpty()&&overblowed.getText().isEmpty()&&nowide.getText().isEmpty()&&noballs.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Please Enter in All Fields! ");
        }else{
                    
            String Teambox=getIDTEAM(SelectTeam1);
            //System.out.println(Teambox);
            //System.out.println("Teambox"+Teambox);
            String MatchID=s.getMatchId();
            String PlayerID=getPlayer1;
            int runedScored=Integer.parseInt(runscored.getText());
            String Inning=(String) inning.getSelectedItem();
            String OUtBy=getPlayer2;
            String OutType=(String) outtype.getText();
            int RunsConceed=Integer.parseInt(runsconceed.getText());
            float OverBlowed=(float) Float.parseFloat(overblowed.getText());
            int NOwide=Integer.parseInt(nowide.getText());
            int NOBalls=Integer.parseInt(noballs.getText());
            //Database Connectivity.
        
            try{
                Connection=objConnectivity.getConnection();
                String Query="insert into ScoreCard(Team_Id,Match_id,Player_idone,runsScored,Innings,OutBy_playerid,OutType,runs_conceed, oversBolwed,No_wides,No_NoBalls)values(?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement preparedStatement=Connection.prepareStatement(Query);
                ScoreCard card=new ScoreCard(Teambox, MatchID, PlayerID, runedScored, Inning, OUtBy, OutType,RunsConceed, OverBlowed, NOwide, NOBalls);
                preparedStatement.setString(1,card.getTeamID());
                preparedStatement.setString(2,card.getMatchID());
                preparedStatement.setString(3,card.getPlayerID());
                preparedStatement.setInt(4,card.getRunedScored());
                preparedStatement.setString(5,card.getInning());
                preparedStatement.setString(6,card.getOutby());
                preparedStatement.setString(7,card.getOutType());
                preparedStatement.setInt(8,card.getRunsConceed());
                preparedStatement.setFloat(9,card.getOverBlowed());
                preparedStatement.setInt(10,card.getNowide());
                preparedStatement.setInt(11,card.getNOBalls());
                preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(this,"Data Succesfully Added!");
                runMenu();
                }catch(Exception e){
                    e.printStackTrace();
                }
        }

    }//GEN-LAST:event_addActionPerformed

    private void noballsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noballsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noballsActionPerformed

    private void outtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outtypeActionPerformed

    private void inningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inningActionPerformed

    private void TeamComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeamComboxActionPerformed
        String check=(String) TeamCombox.getSelectedItem();
        SelectTeam1=check;
        String getIDOFTEAM=getIDTEAM(SelectTeam1);
        LoadPlayerCombox(getIDOFTEAM,players1);
        String check2="";
        for(int i=1;i<=2;i++){
            check2=TeamCombox.getItemAt(i);
            if(check2!=null&&check2!=check){
                SelectTeam2=check2;
            }
        }
        getIDOFTEAM=getIDTEAM(SelectTeam2);
        LoadPlayerCombox(getIDOFTEAM,players2);
    }//GEN-LAST:event_TeamComboxActionPerformed

    private void players1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_players1ActionPerformed
        String Player1=(String) players1.getSelectedItem();
        getPlayer1=GetIDplayer(Player1);
    }//GEN-LAST:event_players1ActionPerformed

    private void players2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_players2ActionPerformed
        String Player2=(String) players2.getSelectedItem();
        getPlayer2=GetIDplayer(Player2);
    }//GEN-LAST:event_players2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreCard_AddForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreCard_AddForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreCard_AddForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreCard_AddForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SheduleMatch sm=null;
                new ScoreCard_AddForm2(sm).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> TeamCombox;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JComboBox<String> inning;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel matchid;
    private javax.swing.JLabel matchvs;
    private javax.swing.JTextField noballs;
    private javax.swing.JTextField nowide;
    private javax.swing.JTextField outtype;
    private javax.swing.JTextField overblowed;
    private javax.swing.JComboBox<String> players1;
    private javax.swing.JComboBox<String> players2;
    private javax.swing.JTextField runsconceed;
    private javax.swing.JTextField runscored;
    private javax.swing.JLabel season;
    // End of variables declaration//GEN-END:variables

    String checkTeam(String id){
        String Name="";
        try{
            String Query="select Name from Team where TeamId=?";
            PreparedStatement ps=Connection.prepareStatement(Query);
            ps.setString(1, id);
            ResultSet rs=ps.executeQuery();
            if(rs!=null&&rs.next()){
                Name=rs.getString("Name");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return Name;
    }
    void TeamCombox(){
        TeamCombox.addItem("-Select-");
        TeamCombox.addItem(getTeamone);
        TeamCombox.addItem(getTeamTwo);
    }
    String getIDTEAM(String Name){
        String id="";
        try{
            String Query="select TeamId from Team where Name=?";
            PreparedStatement ps=Connection.prepareStatement(Query);
            ps.setString(1, Name);
            ResultSet rs=ps.executeQuery();
            if(rs!=null&&rs.next()){
                id=rs.getString("TeamId");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return id;
    }
    void LoadPlayerCombox(String id,JComboBox c){
        try{
            String Query="select p.Name from player p join BidSold b on b.Player_Id=p.Playerid join Team T on t.TeamId=b.Team_Id where t.TeamId=?";
            PreparedStatement ps=Connection.prepareStatement(Query);
            ps.setString(1,id);
            ResultSet rs=ps.executeQuery();
            while(rs!=null&&rs.next()){
                c.addItem(rs.getString("Name"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    String GetIDplayer(String Name){
        String id="";
        try{
            String Query="select Playerid from player where Name=?";
            PreparedStatement ps=Connection.prepareStatement(Query);
            ps.setString(1,Name);
            ResultSet rs=ps.executeQuery();
            if(rs!=null&&rs.next()){
                id=rs.getString("PlayerId");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return id;
    }
    String getSeason(String id){
        String Name="";
        try{
            String Query="Select seasonName from Season where seasonId=?";
            PreparedStatement ps=Connection.prepareStatement(Query);
            ps.setString(1,id);
            ResultSet rs=ps.executeQuery();
            if(rs!=null&&rs.next()){
                Name=rs.getString(1);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return Name;
    }
    void runMenu(){
        dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScoreCard_Menu().setVisible(true);
            }
        });
    }
}
