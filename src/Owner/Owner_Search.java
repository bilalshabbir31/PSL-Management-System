/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Owner;

import DAL.OwnerDal;
import DatabaseConnectivity.DatabaseConnectivity;
import classes.Owner;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author MUHAMMED BILAL
 */
public class Owner_Search extends javax.swing.JFrame {

    /**
     * Creates new form Search_Owner
     */
    DatabaseConnectivity objConnectivity;
    private Connection Connection;
    public Owner_Search() {
        initComponents();
        objConnectivity=new DatabaseConnectivity();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        option = new javax.swing.JComboBox<>();
        search = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        ownersearch = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Owner Search");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(390, 30, 140, 40);

        option.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Option", "ID", "Name" }));
        jPanel1.add(option);
        option.setBounds(350, 120, 240, 40);

        search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(search);
        search.setBounds(310, 190, 330, 50);

        back.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Icon/icons8-back-arrow-48.png"))); // NOI18N
        back.setText("Back");
        back.setContentAreaFilled(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back);
        back.setBounds(10, 20, 130, 57);

        ownersearch.setForeground(new java.awt.Color(255, 255, 255));
        ownersearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Icon/icons8-search-client-48.png"))); // NOI18N
        ownersearch.setText("View");
        ownersearch.setContentAreaFilled(false);
        ownersearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ownersearchActionPerformed(evt);
            }
        });
        jPanel1.add(ownersearch);
        ownersearch.setBounds(330, 270, 130, 50);

        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Icon/icons8-update-48.png"))); // NOI18N
        update.setText("Update");
        update.setContentAreaFilled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update);
        update.setBounds(480, 270, 125, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PSL Background/green_background_3-wallpaper-1920x1080.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 990, 550);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Owner_Menu().setVisible(true);
            }
        });
    }//GEN-LAST:event_backActionPerformed

    private void ownersearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ownersearchActionPerformed
        if(option.getSelectedItem()=="Option"){
            JOptionPane.showMessageDialog(this, "Select Only One Menu Please!");
        }
        else if(option.getSelectedItem().equals("ID")){
            if(!(search.getText().isEmpty()))
            {
                int id=Integer.parseInt(search.getText());
                Connection=objConnectivity.getConnection();
                OwnerDal ownerdal=new OwnerDal(Connection);
                Owner o=ownerdal.SearchbyId(id);
                if(o!=null){
                    RunNextFrameSearch(o);
                }else{
                    JOptionPane.showMessageDialog(this,"Sorry Not Found Database! ");
                }    
                    
            }else{
                JOptionPane.showMessageDialog(this,"Please Fill the Fields");
            }
        }
        else if(option.getSelectedItem().equals("Name")){
            if(!(search.getText()).isEmpty())
            {
                String name=search.getText();
                Connection=objConnectivity.getConnection();
                OwnerDal ownerdal=new OwnerDal(Connection);
                Owner o=ownerdal.SearchbyName(name);
                if(o!=null){
                    RunNextFrameSearch(o);
                }else{
                    JOptionPane.showMessageDialog(this,"Sorry Not Found Database! ");
                }  
            }else{
                JOptionPane.showMessageDialog(this,"Please Fill the Fields");
            }

        }
    }//GEN-LAST:event_ownersearchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if(option.getSelectedItem()=="Option"){
            JOptionPane.showMessageDialog(this, "Select Only One Menu Please!");
        }
        else if(option.getSelectedItem().equals("ID")){
            if(!(search.getText().isEmpty()))
            {
                int id=Integer.parseInt(search.getText());
                Connection=objConnectivity.getConnection();
                OwnerDal ownerdal=new OwnerDal(Connection);
                Owner o=ownerdal.SearchbyId(id);
                if(o!=null){
                    RunNextFrameUpdate(o);
                }else{
                    JOptionPane.showMessageDialog(this,"Sorry Not Found Database! ");
                }    
                    
            }else{
                JOptionPane.showMessageDialog(this,"Please Fill the Fields");
            }
        }
        else if(option.getSelectedItem().equals("Name")){
            if(!(search.getText()).isEmpty())
            {
                String name=search.getText();
                Connection=objConnectivity.getConnection();
                OwnerDal ownerdal=new OwnerDal(Connection);
                Owner o=ownerdal.SearchbyName(name);
                if(o!=null){
                    RunNextFrameUpdate(o);
                }else{
                    JOptionPane.showMessageDialog(this,"Sorry Not Found Database! ");
                }  
            }else{
                JOptionPane.showMessageDialog(this,"Please Fill the Fields");
            }

        }
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Owner_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Owner_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Owner_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Owner_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Owner_Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> option;
    private javax.swing.JButton ownersearch;
    private javax.swing.JTextField search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
    void setClear(){
    option.setSelectedItem("Option");
    search.setText(""); 
    }
    void RunNextFrameSearch(Owner o){
        dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Owner_SearchProfile(o).setVisible(true);
            }
        });
    }
    void RunNextFrameUpdate(Owner o){
        dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Owner_Update(o).setVisible(true);
            }
        });
    }
}
